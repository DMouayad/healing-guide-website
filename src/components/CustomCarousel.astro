---
interface Props {
    carouselId: string;
    slidesCount: number;
    whiteControls?: boolean;
}
const { carouselId, slidesCount, whiteControls = false } = Astro.props;
const slidesIds = Array.from(Array(slidesCount).keys()).map((n) => n + 1);
function controlIsCurrent(index: number) {
    return index == 1 ? { checked: "yes" } : {};
}
---

<div id={carouselId} class="custom-carousel carousel-container">
    <div class="carousel">
        <slot />
    </div>
    <div
        id="controls"
        class="controls"
        class:list={whiteControls ? "controls-light" : ""}
    >
        {
            slidesIds.map((id) => (
                <input
                    {...controlIsCurrent(id)}
                    type="radio"
                    name={carouselId}
                    value={"#" + carouselId + "_" + id}
                    class="controls__dot"
                />
            ))
        }
    </div>
</div>
